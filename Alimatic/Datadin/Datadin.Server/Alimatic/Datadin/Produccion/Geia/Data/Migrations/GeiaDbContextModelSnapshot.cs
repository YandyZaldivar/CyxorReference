// <auto-generated />
using System;
using Alimatic.Datadin.Produccion.Geia.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Alimatic.Datadin.Produccion.Geia.Data.Migrations
{
    [DbContext(typeof(GeiaDbContext))]
    partial class GeiaDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.3-rtm-32065")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Alimatic.Datadin.Produccion.Models.Division", b =>
                {
                    b.Property<int>("Id");

                    b.Property<string>("Name")
                        .HasMaxLength(16);

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Divisions");

                    b.HasData(
                        new { Id = 1, Name = "Agroalimentaria" },
                        new { Id = 2, Name = "Alimentaria" },
                        new { Id = 3, Name = "Pesca" },
                        new { Id = 4, Name = "Servicios" }
                    );
                });

            modelBuilder.Entity("Alimatic.Datadin.Produccion.Models.Enterprise", b =>
                {
                    b.Property<int>("Id");

                    b.Property<int>("DivisionId");

                    b.Property<string>("FullName")
                        .HasMaxLength(127);

                    b.Property<int>("GroupId");

                    b.Property<string>("Name")
                        .HasMaxLength(32);

                    b.HasKey("Id");

                    b.HasIndex("FullName")
                        .IsUnique();

                    b.HasIndex("Name")
                        .IsUnique();

                    b.HasIndex("DivisionId", "GroupId");

                    b.ToTable("Enterprises");

                    b.HasData(
                        new { Id = 1580, DivisionId = 1, FullName = "Empresa cárnica Pinar del Río", GroupId = 1, Name = "Cárnica Pinar del Río" },
                        new { Id = 1585, DivisionId = 1, FullName = "Empresa cárnica Matanzas", GroupId = 1, Name = "Cárnica Matanzas" },
                        new { Id = 1587, DivisionId = 1, FullName = "Empresa cárnica Villa Clara", GroupId = 1, Name = "Cárnica Villa Clara" },
                        new { Id = 1588, DivisionId = 1, FullName = "Empresa cárnica Sancti Spíritus", GroupId = 1, Name = "Cárnica Sancti Spíritus" },
                        new { Id = 1589, DivisionId = 1, FullName = "Empresa cárnica Camagüey", GroupId = 1, Name = "Cárnica Camagüey" },
                        new { Id = 1591, DivisionId = 1, FullName = "Empresa cárnica Holguín", GroupId = 1, Name = "Cárnica Holguín" },
                        new { Id = 1592, DivisionId = 1, FullName = "Empresa cárnica Granma", GroupId = 1, Name = "Cárnica Granma" },
                        new { Id = 1593, DivisionId = 1, FullName = "Empresa cárnica Santiago", GroupId = 1, Name = "Cárnica Santiago de Cuba" },
                        new { Id = 1954, DivisionId = 1, FullName = "Empresa cárnica Guantánamo", GroupId = 1, Name = "Cárnica Guantánamo" },
                        new { Id = 1961, DivisionId = 1, FullName = "Empresa cárnica Ciego de Ávila", GroupId = 1, Name = "Cárnica Ciego de Ávila" },
                        new { Id = 2660, DivisionId = 1, FullName = "Empresa cárnica Las Tunas", GroupId = 1, Name = "Cárnica Las Tunas" },
                        new { Id = 2664, DivisionId = 1, FullName = "Empresa cárnica Habana", GroupId = 1, Name = "Cárnica La Habana" },
                        new { Id = 2756, DivisionId = 1, FullName = "Empresa cárnica Cienfuegos", GroupId = 1, Name = "Cárnica Cienfuegos" },
                        new { Id = 12700, DivisionId = 1, FullName = "Empresa cárnica Tauro", GroupId = 1, Name = "Cárnica Tauro" },
                        new { Id = 13017, DivisionId = 1, FullName = "Empresa cárnica Nueva Paz", GroupId = 1, Name = "Cárnica Nueva Paz" },
                        new { Id = 14203, DivisionId = 1, FullName = "Empresa de aseguramiento de la industria cárnica", GroupId = 1, Name = "ASECAR" },
                        new { Id = 1384, DivisionId = 1, FullName = "Empresa de productos lácteos Coppelia", GroupId = 2, Name = "Lácteos Coppelia" },
                        new { Id = 1594, DivisionId = 1, FullName = "Empresa de productos lácteos y confitería Pinar del Río", GroupId = 2, Name = "Lácteos Pinar del Río" },
                        new { Id = 1595, DivisionId = 1, FullName = "Empresa de productos lácteos Artemisa", GroupId = 2, Name = "Lácteos Artemisa" },
                        new { Id = 1597, DivisionId = 1, FullName = "Empresa de aseguramiento de la industria láctea", GroupId = 2, Name = "Lácteos Aseguramiento" },
                        new { Id = 1598, DivisionId = 1, FullName = "Empresa complejo lácteo Habana", GroupId = 2, Name = "Lácteos La Habana" },
                        new { Id = 1599, DivisionId = 1, FullName = "Empresa de productos lácteos Matanzas", GroupId = 2, Name = "Lácteos Matanzas" },
                        new { Id = 1600, DivisionId = 1, FullName = "Empresa de productos lácteos Villa Clara", GroupId = 2, Name = "Lácteos Villa Clara" },
                        new { Id = 1601, DivisionId = 1, FullName = "Empresa de productos lácteos Escambray", GroupId = 2, Name = "Lácteos Escambray" },
                        new { Id = 1606, DivisionId = 1, FullName = "Empresa de productos lácteos Río Zaza", GroupId = 2, Name = "Lácteos Río Zaza" },
                        new { Id = 1607, DivisionId = 1, FullName = "Empresa de productos lácteos Ciego de Ávila", GroupId = 2, Name = "Lácteos Ciego de Ávila" },
                        new { Id = 1609, DivisionId = 1, FullName = "Empresa de productos lácteos Camagüey", GroupId = 2, Name = "Lácteos Camagüey" },
                        new { Id = 1610, DivisionId = 1, FullName = "Empresa de productos lácteos Las Tunas", GroupId = 2, Name = "Lácteos Las Tunas" },
                        new { Id = 1611, DivisionId = 1, FullName = "Empresa de productos lácteos Holguín", GroupId = 2, Name = "Lácteos Holguín" },
                        new { Id = 1612, DivisionId = 1, FullName = "Empresa de productos lácteos Bayamo", GroupId = 2, Name = "Lácteos Bayamo" },
                        new { Id = 1615, DivisionId = 1, FullName = "Empresa de productos lácteos Santiago de Cuba", GroupId = 2, Name = "Lácteos Santiago de Cuba" },
                        new { Id = 1616, DivisionId = 1, FullName = "Empresa de productos lácteos Guantánamo", GroupId = 2, Name = "Lácteos Guantánamo" },
                        new { Id = 14215, DivisionId = 1, FullName = "Empresa de conservas de vegetales", GroupId = 3, Name = "Conservas de Vegetales" },
                        new { Id = 14216, DivisionId = 1, FullName = "Empresa de torrefacción y comercialización de café", GroupId = 3, Name = "Torrefactora de Café" },
                        new { Id = 4272, DivisionId = 1, FullName = "Empresa productora de alimentos Isla de la Juventud", GroupId = 3, Name = "Alimentos Isla" },
                        new { Id = 1663, DivisionId = 2, FullName = "Empresa de bebidas y refrescos La Habana", GroupId = 1, Name = "EMBER La Habana" },
                        new { Id = 1665, DivisionId = 2, FullName = "Empresa de bebidas y refrescos Villa Clara", GroupId = 1, Name = "EMBER Villa Clara" },
                        new { Id = 1666, DivisionId = 2, FullName = "Empresa de bebidas y refrescos Camagüey", GroupId = 1, Name = "EMBER Camagüey" },
                        new { Id = 1667, DivisionId = 2, FullName = "Empresa de bebidas y refrescos Granma", GroupId = 1, Name = "EMBER Granma" },
                        new { Id = 1668, DivisionId = 2, FullName = "Empresa de bebidas y refrescos Santiago de Cuba", GroupId = 1, Name = "EMBER Santiago de Cuba" },
                        new { Id = 1674, DivisionId = 2, FullName = "Empresa de bebidas y refrescos Pinar del Río", GroupId = 1, Name = "EMBER Pinar del Río" },
                        new { Id = 1679, DivisionId = 2, FullName = "Empresa de bebidas y refrescos Ciego de Ávila", GroupId = 1, Name = "EMBER Ciego de Ávila" },
                        new { Id = 4796, DivisionId = 2, FullName = "Empresa de bebidas y refrescos Mayabeque", GroupId = 1, Name = "EMBER Mayabeque" },
                        new { Id = 13042, DivisionId = 2, FullName = "Empresa aseguramiento industrias bebidas y refrescos", GroupId = 1, Name = "EMBER Aseguramiento" },
                        new { Id = 1672, DivisionId = 2, FullName = "Empresa cervecería Antonio Díaz Santana (Manacas)", GroupId = 2, Name = "Cervecería Manacas" },
                        new { Id = 3008, DivisionId = 2, FullName = "Empresa cervecería Guido Pérez (Modelo)", GroupId = 2, Name = "Cervecería Modelo" },
                        new { Id = 4175, DivisionId = 2, FullName = "Empresa cervecería Santiago de Cuba (Hatuey)", GroupId = 2, Name = "Cervecería Hatuey" },
                        new { Id = 11724, DivisionId = 2, FullName = "Empresa cervecería Tinima", GroupId = 2, Name = "Cervecería Tinima" },
                        new { Id = 1617, DivisionId = 2, FullName = "Empresa de aceites y grasas comestibles La Habana", GroupId = 3, Name = "Aceites La Habana" },
                        new { Id = 13480, DivisionId = 2, FullName = "Empresa de aceites y grasas comestibles Camagüey", GroupId = 3, Name = "Aceites Camagüey" },
                        new { Id = 2794, DivisionId = 2, FullName = "Empresa refinadora de aceites de Santiago de Cuba (Erasol)", GroupId = 3, Name = "Erasol" },
                        new { Id = 13819, DivisionId = 2, FullName = "Empresa procesadora de soya (PDS)", GroupId = 3, Name = "PDS" },
                        new { Id = 1734, DivisionId = 2, FullName = "Empresa cubana de molinería", GroupId = 4, Name = "Molinera" },
                        new { Id = 14194, DivisionId = 2, FullName = "Empresa de confitería y derivados de la harina", GroupId = 4, Name = "Confitera" },
                        new { Id = 11989, DivisionId = 2, FullName = "Empresa cubana del pan", GroupId = 4, Name = "Cubana del Pan" },
                        new { Id = 7508, DivisionId = 3, FullName = "Pesquera Industrial de Batabanó PESCAHABANA", GroupId = 1, Name = "PESCAHABANA" },
                        new { Id = 7892, DivisionId = 3, FullName = "Empresa Pesquera Industrial Isla de la Juventud PESCAISLA", GroupId = 1, Name = "PESCAISLA" },
                        new { Id = 7969, DivisionId = 3, FullName = "Empresa Lanchera Flota del Golfo FLOGOLFO", GroupId = 1, Name = "FLOGOLFO" },
                        new { Id = 12534, DivisionId = 3, FullName = "Empresa Pesquera Industrial de La Coloma EPICOL", GroupId = 1, Name = "EPICOL" },
                        new { Id = 12535, DivisionId = 3, FullName = "Empresa Pesquera Industrial de Caibarién EPICAI", GroupId = 1, Name = "EPICAI" },
                        new { Id = 12536, DivisionId = 3, FullName = "Empresa Pesquera Industrial de Sancti Spíritus EPISAN", GroupId = 1, Name = "EPISAN" },
                        new { Id = 12537, DivisionId = 3, FullName = "Empresa Pesquera Industrial de Santa Cruz del Sur EPISUR", GroupId = 1, Name = "EPISUR" },
                        new { Id = 12538, DivisionId = 3, FullName = "Empresa Pesquera Industrial de Ciego de Ávila EPIVILA", GroupId = 1, Name = "EPIVILA" },
                        new { Id = 12539, DivisionId = 3, FullName = "Empresa Pesquera Industrial de Granma EPIGRAM", GroupId = 1, Name = "EPIGRAM" },
                        new { Id = 12540, DivisionId = 3, FullName = "Empresa Pesquera Industrial de Cienfuegos EPICIEN", GroupId = 1, Name = "EPICIEN" },
                        new { Id = 7430, DivisionId = 3, FullName = "Empresa Pesquera de Pinar del Río PESCARIO", GroupId = 2, Name = "PESCARIO" },
                        new { Id = 7462, DivisionId = 3, FullName = "Empresa Pesquera de Ciego de Ávila PESCAVILA", GroupId = 2, Name = "PESCAVILA" },
                        new { Id = 7491, DivisionId = 3, FullName = "Empresa Pesquera de Holguín PESCAHOL", GroupId = 2, Name = "PESCAHOL" },
                        new { Id = 7541, DivisionId = 3, FullName = "Empresa Pesquera de Matanzas PESCAMAT", GroupId = 2, Name = "PESCAMAT" },
                        new { Id = 7582, DivisionId = 3, FullName = "Empresa Pesquera de Santiago de Cuba PESCASAN", GroupId = 2, Name = "PESCASAN" },
                        new { Id = 7597, DivisionId = 3, FullName = "Empresa Pesquera de Villa Clara PESCAVILLA", GroupId = 2, Name = "PESCAVILLA" },
                        new { Id = 7622, DivisionId = 3, FullName = "Empresa Pesquera de Sancti Spíritus PESCASPIR", GroupId = 2, Name = "PESCASPIR" },
                        new { Id = 7649, DivisionId = 3, FullName = "Empresa Pesquera de Camagüey PESCACAM", GroupId = 2, Name = "PESCACAM" },
                        new { Id = 7881, DivisionId = 3, FullName = "Empresa Pesquera de La Habana ACUABANA", GroupId = 2, Name = "ACUABANA" },
                        new { Id = 7888, DivisionId = 3, FullName = "Preparación Acuícola de Mampostón EDTA", GroupId = 2, Name = "EDTA" },
                        new { Id = 7911, DivisionId = 3, FullName = "Empresa Pesquera de Granma PESCAGRAN", GroupId = 2, Name = "PESCAGRAN" },
                        new { Id = 14700, DivisionId = 3, FullName = "Empresa Pesquera de Las Tunas PESCATUN", GroupId = 2, Name = "PESCATUN" },
                        new { Id = 14699, DivisionId = 3, FullName = "Empresa Pesquera de Guantánamo PESCAGUÁN", GroupId = 2, Name = "PESCAGUAN" },
                        new { Id = 14202, DivisionId = 3, FullName = "Empresa para el cultivo del Camarón GDECAN", GroupId = 3, Name = "GDECAN" },
                        new { Id = 13051, DivisionId = 3, FullName = "Empresa Comercial CARIBEX", GroupId = 3, Name = "CARIBEX" },
                        new { Id = 4168, DivisionId = 3, FullName = "Empresa Pesca Caribe", GroupId = 3, Name = "Pesca Caribe" },
                        new { Id = 7955, DivisionId = 3, FullName = "Empresa Proveedora del Minal PROPES", GroupId = 3, Name = "PROPES" },
                        new { Id = 11307, DivisionId = 3, FullName = "Empresa Comercial de Alimentos COPMAR", GroupId = 3, Name = "COPMAR" },
                        new { Id = 11163, DivisionId = 3, FullName = "Empresa Productora de Alimentos de Regla PRODAL", GroupId = 3, Name = "PRODAL" },
                        new { Id = 7980, DivisionId = 3, FullName = "Empresa Terminal Refrigerada TERREF", GroupId = 3, Name = "TERREF" },
                        new { Id = 7536, DivisionId = 3, FullName = "Empresa de Transporte Refrigerado ATLAS", GroupId = 3, Name = "ATLAS" },
                        new { Id = 6223, DivisionId = 4, FullName = "Proyectos de Construcciones y Servicios Navales CEPRONA", GroupId = 1, Name = "CEPRONA" },
                        new { Id = 12070, DivisionId = 4, FullName = "Empresa de Diseño y Servicios de Ingeniería IDS", GroupId = 1, Name = "IDS" },
                        new { Id = 11721, DivisionId = 4, FullName = "Empresa de Servicios de Seguridad y Protección ESEP", GroupId = 1, Name = "ESEP" },
                        new { Id = 6228, DivisionId = 4, FullName = "Empresa de Sistemas Automatizados ALIMATIC", GroupId = 1, Name = "ALIMATIC" },
                        new { Id = 7744, DivisionId = 4, FullName = "Empresa de Refrigeración y Calderas del Minal SERIC", GroupId = 1, Name = "SERIC" },
                        new { Id = 7730, DivisionId = 4, FullName = "Empresa de Construcciones Metálicas y Eléctricas COMELEC", GroupId = 1, Name = "COMELEC" },
                        new { Id = 6301, DivisionId = 4, FullName = "Empresa de Servicios Varios del Minal EMSERVA", GroupId = 1, Name = "EMSERVA" },
                        new { Id = 2046, DivisionId = 4, FullName = "Empresa Revista Mar y Pesca", GroupId = 1, Name = "Revista Mar y Pesca" },
                        new { Id = 13541, DivisionId = 4, FullName = "Empresa Importadora Exportadora del Minal ALIMPEX", GroupId = 1, Name = "ALIMPEX" },
                        new { Id = 14097, DivisionId = 4, FullName = "Grupo Empresarial de la Industria Alimentaria", GroupId = 1, Name = "GEIA" },
                        new { Id = 14091, DivisionId = 4, FullName = "OSDE Grupo Empresarial de la Industria Alimentaria", GroupId = 1, Name = "OSDE GEIA" }
                    );
                });

            modelBuilder.Entity("Alimatic.Datadin.Produccion.Models.Frequency", b =>
                {
                    b.Property<int>("Id");

                    b.Property<string>("Name")
                        .HasMaxLength(16);

                    b.HasKey("Id");

                    b.ToTable("Frequencies");

                    b.HasData(
                        new { Id = 1, Name = "Daily" },
                        new { Id = 2, Name = "Monthly" }
                    );
                });

            modelBuilder.Entity("Alimatic.Datadin.Produccion.Models.Group", b =>
                {
                    b.Property<int>("DivisionId");

                    b.Property<int>("Id");

                    b.Property<string>("Name")
                        .HasMaxLength(16);

                    b.HasKey("DivisionId", "Id");

                    b.ToTable("Groups");

                    b.HasData(
                        new { DivisionId = 1, Id = 1, Name = "Carnes" },
                        new { DivisionId = 1, Id = 2, Name = "Lácteos" },
                        new { DivisionId = 1, Id = 3, Name = "Otras" },
                        new { DivisionId = 2, Id = 1, Name = "Bebidas" },
                        new { DivisionId = 2, Id = 2, Name = "Cervezas" },
                        new { DivisionId = 2, Id = 3, Name = "Aceites" },
                        new { DivisionId = 2, Id = 4, Name = "Otras" },
                        new { DivisionId = 3, Id = 1, Name = "Plataforma" },
                        new { DivisionId = 3, Id = 2, Name = "Acuicultura" },
                        new { DivisionId = 3, Id = 3, Name = "Otras" },
                        new { DivisionId = 4, Id = 1, Name = "Servicios" }
                    );
                });

            modelBuilder.Entity("Alimatic.Datadin.Produccion.Models.Model", b =>
                {
                    b.Property<int>("Id");

                    b.Property<int>("ColumnCount");

                    b.Property<string>("ColumnNames")
                        .HasMaxLength(1024);

                    b.Property<string>("Description")
                        .HasMaxLength(1024);

                    b.Property<int>("FrequencyId");

                    b.Property<bool>("IsEFModel");

                    b.Property<int>("RowCount");

                    b.HasKey("Id");

                    b.HasIndex("FrequencyId");

                    b.ToTable("Models");
                });

            modelBuilder.Entity("Alimatic.Datadin.Produccion.Models.Record", b =>
                {
                    b.Property<int>("Year");

                    b.Property<int>("Month");

                    b.Property<int>("Day");

                    b.Property<int>("EnterpriseId");

                    b.Property<int>("ModelId");

                    b.Property<int>("RowId");

                    b.Property<decimal?>("C01")
                        .HasColumnType("Decimal(22, 2)");

                    b.Property<decimal?>("C02")
                        .HasColumnType("Decimal(22, 2)");

                    b.Property<decimal?>("C03")
                        .HasColumnType("Decimal(22, 2)");

                    b.Property<decimal?>("C04")
                        .HasColumnType("Decimal(22, 2)");

                    b.Property<decimal?>("C05")
                        .HasColumnType("Decimal(22, 2)");

                    b.Property<decimal?>("C06")
                        .HasColumnType("Decimal(22, 2)");

                    b.Property<decimal?>("C07")
                        .HasColumnType("Decimal(22, 2)");

                    b.Property<decimal?>("C08")
                        .HasColumnType("Decimal(22, 2)");

                    b.Property<decimal?>("C09")
                        .HasColumnType("Decimal(22, 2)");

                    b.HasKey("Year", "Month", "Day", "EnterpriseId", "ModelId", "RowId");

                    b.HasAlternateKey("Day", "EnterpriseId", "ModelId", "Month", "RowId", "Year");

                    b.HasIndex("EnterpriseId");

                    b.HasIndex("ModelId");

                    b.HasIndex("RowId", "ModelId");

                    b.HasIndex("Year", "Month", "Day", "ModelId");

                    b.ToTable("Records");
                });

            modelBuilder.Entity("Alimatic.Datadin.Produccion.Models.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description")
                        .HasMaxLength(1024);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(64);

                    b.HasKey("Id");

                    b.ToTable("Role");
                });

            modelBuilder.Entity("Alimatic.Datadin.Produccion.Models.Row", b =>
                {
                    b.Property<int>("Id");

                    b.Property<int>("ModelId");

                    b.Property<string>("Description")
                        .HasMaxLength(1024);

                    b.HasKey("Id", "ModelId");

                    b.HasIndex("ModelId");

                    b.ToTable("Rows");
                });

            modelBuilder.Entity("Alimatic.Datadin.Produccion.Models.Template", b =>
                {
                    b.Property<int>("Year");

                    b.Property<int>("Month");

                    b.Property<int>("Day");

                    b.Property<int>("ModelId");

                    b.Property<bool>("Locked");

                    b.HasKey("Year", "Month", "Day", "ModelId");

                    b.HasAlternateKey("Day", "ModelId", "Month", "Year");

                    b.HasIndex("ModelId");

                    b.ToTable("Templates");
                });

            modelBuilder.Entity("Alimatic.Datadin.Produccion.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("AccountId");

                    b.Property<string>("Email")
                        .HasMaxLength(64);

                    b.Property<int?>("EnterpriseId");

                    b.Property<string>("Name")
                        .HasMaxLength(64);

                    b.Property<string>("Password")
                        .HasMaxLength(8192);

                    b.Property<int>("Permission");

                    b.Property<int>("SecurityLevel");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("EnterpriseId");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Alimatic.Datadin.Produccion.Models.UserModel", b =>
                {
                    b.Property<int>("UserId");

                    b.Property<int>("ModelId");

                    b.HasKey("UserId", "ModelId");

                    b.HasAlternateKey("ModelId", "UserId");

                    b.ToTable("UserModels");
                });

            modelBuilder.Entity("Alimatic.Datadin.Produccion.Models.UserRole", b =>
                {
                    b.Property<int>("UserId");

                    b.Property<int>("RoleId");

                    b.HasKey("UserId", "RoleId");

                    b.HasAlternateKey("RoleId", "UserId");

                    b.ToTable("UserRole");
                });

            modelBuilder.Entity("Alimatic.Datadin.Produccion.Models.Enterprise", b =>
                {
                    b.HasOne("Alimatic.Datadin.Produccion.Models.Division", "Division")
                        .WithMany("Enterprise")
                        .HasForeignKey("DivisionId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Alimatic.Datadin.Produccion.Models.Group", "Group")
                        .WithMany("Enterprise")
                        .HasForeignKey("DivisionId", "GroupId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Alimatic.Datadin.Produccion.Models.Group", b =>
                {
                    b.HasOne("Alimatic.Datadin.Produccion.Models.Division", "Division")
                        .WithMany("Group")
                        .HasForeignKey("DivisionId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Alimatic.Datadin.Produccion.Models.Model", b =>
                {
                    b.HasOne("Alimatic.Datadin.Produccion.Models.Frequency", "Frequency")
                        .WithMany()
                        .HasForeignKey("FrequencyId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Alimatic.Datadin.Produccion.Models.Record", b =>
                {
                    b.HasOne("Alimatic.Datadin.Produccion.Models.Enterprise", "Enterprise")
                        .WithMany("EstadosFinancieros")
                        .HasForeignKey("EnterpriseId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Alimatic.Datadin.Produccion.Models.Model", "Model")
                        .WithMany()
                        .HasForeignKey("ModelId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Alimatic.Datadin.Produccion.Models.Row", "Row")
                        .WithMany()
                        .HasForeignKey("RowId", "ModelId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Alimatic.Datadin.Produccion.Models.Template", "Template")
                        .WithMany()
                        .HasForeignKey("Year", "Month", "Day", "ModelId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Alimatic.Datadin.Produccion.Models.Row", b =>
                {
                    b.HasOne("Alimatic.Datadin.Produccion.Models.Model", "Model")
                        .WithMany()
                        .HasForeignKey("ModelId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Alimatic.Datadin.Produccion.Models.Template", b =>
                {
                    b.HasOne("Alimatic.Datadin.Produccion.Models.Model", "Model")
                        .WithMany("Templates")
                        .HasForeignKey("ModelId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Alimatic.Datadin.Produccion.Models.User", b =>
                {
                    b.HasOne("Alimatic.Datadin.Produccion.Models.Enterprise", "Enterprise")
                        .WithMany()
                        .HasForeignKey("EnterpriseId");
                });

            modelBuilder.Entity("Alimatic.Datadin.Produccion.Models.UserModel", b =>
                {
                    b.HasOne("Alimatic.Datadin.Produccion.Models.Model", "Model")
                        .WithMany("Users")
                        .HasForeignKey("ModelId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Alimatic.Datadin.Produccion.Models.User", "User")
                        .WithMany("Models")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Alimatic.Datadin.Produccion.Models.UserRole", b =>
                {
                    b.HasOne("Alimatic.Datadin.Produccion.Models.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Alimatic.Datadin.Produccion.Models.User", "User")
                        .WithMany("Roles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
