// <auto-generated />
using Alimatic.Coralsa.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace Alimatic.Coralsa.Data.Migrations
{
    [DbContext(typeof(CoralsaDbContext))]
    partial class CoralsaDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn)
                .HasAnnotation("ProductVersion", "2.0.1-rtm-125");

            modelBuilder.Entity("Alimatic.Coralsa.Models.Division", b =>
                {
                    b.Property<int>("Id");

                    b.Property<string>("Name")
                        .HasMaxLength(16);

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Divisions");
                });

            modelBuilder.Entity("Alimatic.Coralsa.Models.Enterprise", b =>
                {
                    b.Property<int>("Id");

                    b.Property<int>("DivisionId");

                    b.Property<string>("FullName")
                        .HasMaxLength(127);

                    b.Property<int>("GroupId");

                    b.Property<string>("Name")
                        .HasMaxLength(32);

                    b.HasKey("Id");

                    b.HasIndex("FullName")
                        .IsUnique();

                    b.HasIndex("Name")
                        .IsUnique();

                    b.HasIndex("DivisionId", "GroupId");

                    b.ToTable("Enterprises");
                });

            modelBuilder.Entity("Alimatic.Coralsa.Models.Frequency", b =>
                {
                    b.Property<int>("Id");

                    b.Property<string>("Name")
                        .HasMaxLength(16);

                    b.HasKey("Id");

                    b.ToTable("Frequencies");
                });

            modelBuilder.Entity("Alimatic.Coralsa.Models.Group", b =>
                {
                    b.Property<int>("DivisionId");

                    b.Property<int>("Id");

                    b.Property<string>("Name")
                        .HasMaxLength(16);

                    b.HasKey("DivisionId", "Id");

                    b.ToTable("Groups");
                });

            modelBuilder.Entity("Alimatic.Coralsa.Models.Model", b =>
                {
                    b.Property<int>("Id");

                    b.Property<int>("ColumnCount");

                    b.Property<string>("ColumnNames")
                        .HasMaxLength(1024);

                    b.Property<string>("Description")
                        .HasMaxLength(1024);

                    b.Property<int>("FrequencyId");

                    b.Property<bool>("IsEFModel");

                    b.Property<int>("RowCount");

                    b.HasKey("Id");

                    b.HasIndex("FrequencyId");

                    b.ToTable("Models");
                });

            modelBuilder.Entity("Alimatic.Coralsa.Models.Record", b =>
                {
                    b.Property<int>("Year");

                    b.Property<int>("Month");

                    b.Property<int>("Day");

                    b.Property<int>("EnterpriseId");

                    b.Property<int>("ModelId");

                    b.Property<int>("RowId");

                    b.Property<decimal?>("C01")
                        .HasColumnType("Decimal(22, 2)");

                    b.Property<decimal?>("C02")
                        .HasColumnType("Decimal(22, 2)");

                    b.Property<decimal?>("C03")
                        .HasColumnType("Decimal(22, 2)");

                    b.Property<decimal?>("C04")
                        .HasColumnType("Decimal(22, 2)");

                    b.Property<decimal?>("C05")
                        .HasColumnType("Decimal(22, 2)");

                    b.Property<decimal?>("C06")
                        .HasColumnType("Decimal(22, 2)");

                    b.Property<decimal?>("C07")
                        .HasColumnType("Decimal(22, 2)");

                    b.Property<decimal?>("C08")
                        .HasColumnType("Decimal(22, 2)");

                    b.Property<decimal?>("C09")
                        .HasColumnType("Decimal(22, 2)");

                    b.HasKey("Year", "Month", "Day", "EnterpriseId", "ModelId", "RowId");

                    b.HasAlternateKey("Day", "EnterpriseId", "ModelId", "Month", "RowId", "Year");

                    b.HasIndex("EnterpriseId");

                    b.HasIndex("ModelId");

                    b.HasIndex("RowId", "ModelId");

                    b.HasIndex("Year", "Month", "Day", "ModelId");

                    b.ToTable("Records");
                });

            modelBuilder.Entity("Alimatic.Coralsa.Models.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description")
                        .HasMaxLength(1024);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(64);

                    b.HasKey("Id");

                    b.ToTable("Role");
                });

            modelBuilder.Entity("Alimatic.Coralsa.Models.Row", b =>
                {
                    b.Property<int>("Id");

                    b.Property<int>("ModelId");

                    b.Property<string>("Description")
                        .HasMaxLength(1024);

                    b.HasKey("Id", "ModelId");

                    b.HasIndex("ModelId");

                    b.ToTable("Rows");
                });

            modelBuilder.Entity("Alimatic.Coralsa.Models.Template", b =>
                {
                    b.Property<int>("Year");

                    b.Property<int>("Month");

                    b.Property<int>("Day");

                    b.Property<int>("ModelId");

                    b.Property<bool>("Locked");

                    b.HasKey("Year", "Month", "Day", "ModelId");

                    b.HasAlternateKey("Day", "ModelId", "Month", "Year");

                    b.HasIndex("ModelId");

                    b.ToTable("Templates");
                });

            modelBuilder.Entity("Alimatic.Coralsa.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("AccountId");

                    b.Property<string>("Email")
                        .HasMaxLength(64);

                    b.Property<int?>("EnterpriseId");

                    b.Property<string>("Name")
                        .HasMaxLength(64);

                    b.Property<string>("Password")
                        .HasMaxLength(8192);

                    b.Property<int>("Permission");

                    b.Property<int>("SecurityLevel");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("EnterpriseId");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Alimatic.Coralsa.Models.UserModel", b =>
                {
                    b.Property<int>("UserId");

                    b.Property<int>("ModelId");

                    b.HasKey("UserId", "ModelId");

                    b.HasAlternateKey("ModelId", "UserId");

                    b.ToTable("UserModels");
                });

            modelBuilder.Entity("Alimatic.Coralsa.Models.UserRole", b =>
                {
                    b.Property<int>("UserId");

                    b.Property<int>("RoleId");

                    b.HasKey("UserId", "RoleId");

                    b.HasAlternateKey("RoleId", "UserId");

                    b.ToTable("UserRole");
                });

            modelBuilder.Entity("Alimatic.Coralsa.Models.Enterprise", b =>
                {
                    b.HasOne("Alimatic.Coralsa.Models.Division", "Division")
                        .WithMany("Enterprise")
                        .HasForeignKey("DivisionId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Alimatic.Coralsa.Models.Group", "Group")
                        .WithMany("Enterprise")
                        .HasForeignKey("DivisionId", "GroupId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Alimatic.Coralsa.Models.Group", b =>
                {
                    b.HasOne("Alimatic.Coralsa.Models.Division", "Division")
                        .WithMany("Group")
                        .HasForeignKey("DivisionId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Alimatic.Coralsa.Models.Model", b =>
                {
                    b.HasOne("Alimatic.Coralsa.Models.Frequency", "Frequency")
                        .WithMany()
                        .HasForeignKey("FrequencyId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Alimatic.Coralsa.Models.Record", b =>
                {
                    b.HasOne("Alimatic.Coralsa.Models.Enterprise", "Enterprise")
                        .WithMany("EstadosFinancieros")
                        .HasForeignKey("EnterpriseId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Alimatic.Coralsa.Models.Model", "Model")
                        .WithMany()
                        .HasForeignKey("ModelId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Alimatic.Coralsa.Models.Row", "Row")
                        .WithMany()
                        .HasForeignKey("RowId", "ModelId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Alimatic.Coralsa.Models.Template", "Template")
                        .WithMany()
                        .HasForeignKey("Year", "Month", "Day", "ModelId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Alimatic.Coralsa.Models.Row", b =>
                {
                    b.HasOne("Alimatic.Coralsa.Models.Model", "Model")
                        .WithMany()
                        .HasForeignKey("ModelId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Alimatic.Coralsa.Models.Template", b =>
                {
                    b.HasOne("Alimatic.Coralsa.Models.Model", "Model")
                        .WithMany("Templates")
                        .HasForeignKey("ModelId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Alimatic.Coralsa.Models.User", b =>
                {
                    b.HasOne("Alimatic.Coralsa.Models.Enterprise", "Enterprise")
                        .WithMany()
                        .HasForeignKey("EnterpriseId");
                });

            modelBuilder.Entity("Alimatic.Coralsa.Models.UserModel", b =>
                {
                    b.HasOne("Alimatic.Coralsa.Models.Model", "Model")
                        .WithMany("Users")
                        .HasForeignKey("ModelId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Alimatic.Coralsa.Models.User", "User")
                        .WithMany("Models")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Alimatic.Coralsa.Models.UserRole", b =>
                {
                    b.HasOne("Alimatic.Coralsa.Models.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Alimatic.Coralsa.Models.User", "User")
                        .WithMany("Roles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
